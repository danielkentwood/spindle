# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (8)
# #########################################################################

class CharacterSpan(BaseModel):
    text: typing.Optional[str] = None
    start: typing.Optional[int] = None
    end: typing.Optional[int] = None

class EntityType(BaseModel):
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None

class ExtractionResult(BaseModel):
    triples: typing.List["Triple"]
    reasoning: typing.Optional[str] = None

class Ontology(BaseModel):
    entity_types: typing.List["EntityType"]
    relation_types: typing.List["RelationType"]

class RelationType(BaseModel):
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None
    domain: typing.Optional[str] = None
    range: typing.Optional[str] = None

class Resume(BaseModel):
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    experience: typing.List[str]
    skills: typing.List[str]

class SourceMetadata(BaseModel):
    source_name: typing.Optional[str] = None
    source_url: typing.Optional[str] = None

class Triple(BaseModel):
    subject: typing.Optional[str] = None
    predicate: typing.Optional[str] = None
    object: typing.Optional[str] = None
    source: typing.Optional["SourceMetadata"] = None
    supporting_spans: typing.List["CharacterSpan"]
    extraction_datetime: typing.Optional[str] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
